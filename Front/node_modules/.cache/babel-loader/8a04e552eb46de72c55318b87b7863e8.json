{"ast":null,"code":"var _jsxFileName = \"/Users/yunjiseob/Desktop/hello-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport Card from './Card';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var cardNum = 16; //이건 나중에 따로 난이도 설정으로 갯수 바꿀수있게 해볼 예정\n\n  const [num, setNum] = useState([]);\n\n  const randStart = () => {\n    var num1 = [];\n\n    for (let i = 0; i < cardNum; i++) {\n      var ran = Math.floor(Math.random() * cardNum + 1);\n\n      while (1) {\n        if (num1.includes(ran)) {\n          ran = Math.floor(Math.random() * cardNum + 1);\n        } else {\n          num1[i] = ran;\n          break;\n        }\n\n        setNum(num1);\n      }\n    } //1~16까지의 수를 랜덤하게 배열에 넣는다\n\n  };\n\n  const flip = e => {\n    e.target.classList.toggle('front');\n    e.target.ClassList.toggle('back');\n  }; // state가 변함에따라 클릭한 한장만 뒤집고 싶었지만 전체에 적용되고, 값변화를 적용하기위해\n  //재 랜더링 하여 모든 카드 값이 랜덤으로 다시 바뀌어서 이 방법은 실패\n\n\n  var cardSet1 = []; //첫번째열을 위한 카드번호 배열\n\n  var cardSet2 = []; //두번째열을 위한 카드번호 배열\n\n  for (let i = 0; i < cardNum.length; i++) {\n    if (i >= num.length) {\n      cardSet2.push( /*#__PURE__*/_jsxDEV(Card, {\n        value: num[i],\n        className: \"front\",\n        onClick: flip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)); //num의 8~15번까지의 인덱스 값을 넣음\n    } else {\n      cardSet1.push( /*#__PURE__*/_jsxDEV(Card, {\n        value: num[i],\n        className: \"front\",\n        onClick: flip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)); //num의 0~7번까지의 인덱스 값을 넣음\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: cardSet1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cardSet2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: randStart,\n        children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"8RhF5d1bOCUFkcyQxrAOo89YIPI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","Button","App","cardNum","num","setNum","randStart","num1","i","ran","Math","floor","random","includes","flip","e","target","classList","toggle","ClassList","cardSet1","cardSet2","length","push"],"sources":["/Users/yunjiseob/Desktop/hello-react/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from 'react'\nimport Card from './Card';\nimport Button from './Button';\n\n\n\nfunction App() {\n  var cardNum=16; //이건 나중에 따로 난이도 설정으로 갯수 바꿀수있게 해볼 예정\n  const [num,setNum]=useState([]);\n  \n  const randStart = () => {\n    var num1=[];\n    for(let i=0; i<cardNum; i++){\n      var ran=Math.floor(Math.random()*cardNum+1);\n      while(1){\n      if(num1.includes(ran))\n      {ran=Math.floor(Math.random()*cardNum+1);}\n      else {\n        num1[i]=ran;\n        break;\n      }\n      setNum(num1);\n      }\n    } //1~16까지의 수를 랜덤하게 배열에 넣는다\n  }\n  \n  \n  const flip = (e) => {\n    e.target.classList.toggle('front');\n    e.target.ClassList.toggle('back');\n  } // state가 변함에따라 클릭한 한장만 뒤집고 싶었지만 전체에 적용되고, 값변화를 적용하기위해\n    //재 랜더링 하여 모든 카드 값이 랜덤으로 다시 바뀌어서 이 방법은 실패\n\n  var cardSet1=[];  //첫번째열을 위한 카드번호 배열\n  var cardSet2=[];  //두번째열을 위한 카드번호 배열\n  for(let i=0; i<cardNum.length; i++)\n  {\n    if(i>=num.length){\n      cardSet2.push(<Card value={num[i]} className='front' onClick={flip}/>); //num의 8~15번까지의 인덱스 값을 넣음\n    }\n    else {\n      cardSet1.push(<Card value={num[i]} className='front' onClick={flip}/>); //num의 0~7번까지의 인덱스 값을 넣음\n    }\n  }\n  \n  return (\n   <>\n  <div>\n    {cardSet1}\n  </div>\n  <div>\n    {cardSet2}\n  </div>\n   <div>\n  <Button onClick={randStart}>시작하기</Button>\n  </div> \n   </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAIA,SAASC,GAAT,GAAe;EAAA;;EACb,IAAIC,OAAO,GAAC,EAAZ,CADa,CACG;;EAChB,MAAM,CAACC,GAAD,EAAKC,MAAL,IAAaN,QAAQ,CAAC,EAAD,CAA3B;;EAEA,MAAMO,SAAS,GAAG,MAAM;IACtB,IAAIC,IAAI,GAAC,EAAT;;IACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,OAAf,EAAwBK,CAAC,EAAzB,EAA4B;MAC1B,IAAIC,GAAG,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcT,OAAd,GAAsB,CAAjC,CAAR;;MACA,OAAM,CAAN,EAAQ;QACR,IAAGI,IAAI,CAACM,QAAL,CAAcJ,GAAd,CAAH,EACA;UAACA,GAAG,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcT,OAAd,GAAsB,CAAjC,CAAJ;QAAyC,CAD1C,MAEK;UACHI,IAAI,CAACC,CAAD,CAAJ,GAAQC,GAAR;UACA;QACD;;QACDJ,MAAM,CAACE,IAAD,CAAN;MACC;IACF,CAbqB,CAapB;;EACH,CAdD;;EAiBA,MAAMO,IAAI,GAAIC,CAAD,IAAO;IAClBA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,MAAnB,CAA0B,OAA1B;IACAH,CAAC,CAACC,MAAF,CAASG,SAAT,CAAmBD,MAAnB,CAA0B,MAA1B;EACD,CAHD,CArBa,CAwBX;EACA;;;EAEF,IAAIE,QAAQ,GAAC,EAAb,CA3Ba,CA2BK;;EAClB,IAAIC,QAAQ,GAAC,EAAb,CA5Ba,CA4BK;;EAClB,KAAI,IAAIb,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,OAAO,CAACmB,MAAvB,EAA+Bd,CAAC,EAAhC,EACA;IACE,IAAGA,CAAC,IAAEJ,GAAG,CAACkB,MAAV,EAAiB;MACfD,QAAQ,CAACE,IAAT,eAAc,QAAC,IAAD;QAAM,KAAK,EAAEnB,GAAG,CAACI,CAAD,CAAhB;QAAqB,SAAS,EAAC,OAA/B;QAAuC,OAAO,EAAEM;MAAhD;QAAA;QAAA;QAAA;MAAA,QAAd,EADe,CACyD;IACzE,CAFD,MAGK;MACHM,QAAQ,CAACG,IAAT,eAAc,QAAC,IAAD;QAAM,KAAK,EAAEnB,GAAG,CAACI,CAAD,CAAhB;QAAqB,SAAS,EAAC,OAA/B;QAAuC,OAAO,EAAEM;MAAhD;QAAA;QAAA;QAAA;MAAA,QAAd,EADG,CACqE;IACzE;EACF;;EAED,oBACC;IAAA,wBACD;MAAA,UACGM;IADH;MAAA;MAAA;MAAA;IAAA,QADC,eAID;MAAA,UACGC;IADH;MAAA;MAAA;MAAA;IAAA,QAJC,eAOA;MAAA,uBACD,QAAC,MAAD;QAAQ,OAAO,EAAEf,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADC;MAAA;MAAA;MAAA;IAAA,QAPA;EAAA,gBADD;AAaD;;GApDQJ,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}